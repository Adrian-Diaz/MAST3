name: build-and-test-mast
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get -qq install -y \
            gfortran wget m4 \
            openmpi-bin libopenmpi-dev \
            petsc-dev libpetsc3.7.7-dbg \
            slepc-dev libparpack2-dev \
            metis libmetis-dev \
            libparpack2-dev \
            libnetcdf13 libnetcdf-dev \
            libboost-all-dev \
            libeigen3-dev \
            libadolc-dev \
            doxygen graphviz rsync \
            texlive-latex-base dvi2ps ghostscript \
            python3.7 python3.7-dev libpython3.7

      - name: Setup pip w/ external Python 3.7 & install Python dependencies
        run: |
          cd ${HOME}/work
          wget https://bootstrap.pypa.io/get-pip.py
          sudo python3.7 get-pip.py
          sudo python3.7 -m pip install numpy scipy docopt colorama pandas h5py matplotlib cpylog pyNastran
          sudo python3.7 -m pip install Cython --install-option="--no-cython-compile"

      - name: Update to later CMake release
        run: |
          cd ${HOME}/work
          wget https://github.com/Kitware/CMake/releases/download/v3.15.5/cmake-3.15.5-Linux-x86_64.sh
          sudo mkdir /opt/cmake
          sudo sh cmake-3.15.5-Linux-x86_64.sh --prefix=/opt/cmake --skip-license

      - name: Get/install libMesh dependency
        run: |
          cd ${HOME}/work
          wget -nv "https://github.com/MASTmultiphysics/mast-ci-packages/releases/download/libmesh_ubuntu18.04/libmesh-1.5.1-1.deb"
          sudo apt install "./libmesh-1.5.1-1.deb"

      - name: Configure MAST (Debug Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build_dbg
          cd build_dbg
          /opt/cmake/bin/cmake .. \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX="${MAST_INSTALL_DIR}" \
            -DCMAKE_C_COMPILER=mpicc \
            -DCMAKE_CXX_COMPILER=mpic++ \
            -DCMAKE_Fortran_COMPILER=mpifort \
            -DlibMesh_DIR=/usr/local \
            -DPETSc_DIR=/usr/lib/petsc \
            -DSLEPc_DIR=/usr/lib/slepc \
            -DEIGEN3_ROOT=/usr/include/eigen3 \
            -DADOLC_DIR=/usr \
            -DPython3_DIR=/usr \
            -DBOOST_ROOT=/usr \
            -DBUILD_DOC=ON \
            -DENABLE_DOT=OFF \
            -DENABLE_GCMMA=OFF \
            -DENABLE_SNOPT=OFF\
            -DENABLE_ADOLC=ON \
            -DENABLE_NASTRANIO=OFF \
            -DENABLE_CYTHON=OFF

      - name: Build MAST (Debug Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}/build_dbg
          make -j 2

      - name: Test MAST (Debug Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}/build_dbg/tests
          ctest --force-new-ctest-process --output-on-failure --timeout 30

      - name: Configure MAST (Release Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build_rel
          cd build_rel
          /opt/cmake/bin/cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="${MAST_INSTALL_DIR}" \
            -DCMAKE_C_COMPILER=mpicc \
            -DCMAKE_CXX_COMPILER=mpic++ \
            -DCMAKE_Fortran_COMPILER=mpifort \
            -DlibMesh_DIR=/usr/local \
            -DPETSc_DIR=/usr/lib/petsc \
            -DSLEPc_DIR=/usr/lib/slepc \
            -DEIGEN3_ROOT=/usr/include/eigen3 \
            -DADOLC_DIR=/usr/lib/adolc \
            -DPython3_DIR=/usr \
            -DBOOST_ROOT=/usr \
            -DBUILD_DOC=ON \
            -DENABLE_DOT=OFF \
            -DENABLE_GCMMA=OFF \
            -DENABLE_SNOPT=OFF \
            -DENABLE_ADOLC=ON \
            -DENABLE_NASTRANIO=OFF \
            -DENABLE_CYTHON=OFF

      - name: Build MAST (Release Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}/build_rel
          make -j 2

      - name: Test MAST (Release Version)
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}/build_rel/tests
          ctest --force-new-ctest-process --output-on-failure --timeout 30